name: Pull Request
on:
  merge_group:
  pull_request:
    types: [assigned, opened, synchronize, reopened, labeled, unlabeled]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  labeler:
    name: Chart Diff Labeler
    permissions:
      contents: read
      pull-requests: write
    runs-on: shipfox-2vcpu-ubuntu-2404
    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0
      - uses: actions/labeler@v5
        with:
          sync-labels: true
      - name: Retrieve chart changes
        id: chart_changes
        run: |
          CHARTS=$(git diff ${{ github.base_ref }} --stat | grep -oE 'charts/[^/]+/' | sed 's|charts/||;s|/||' | sort -u | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "Changed charts: $CHARTS"
          echo "::set-output name=changed_charts::$CHARTS"
      - name: Label PR based on chart changes
        if: steps.chart_changes.outputs.changed_charts != ''
        uses: actions/github-script@v7
        env:
          CHARTS: ${{ steps.chart_changes.outputs.changed_charts }}
        with:
          script: |
            const charts = JSON.parse(process.env.CHARTS);
            const labels = charts.map(chart => `chart-${chart.trim()}`).filter(label => label.length > 0);

            if (labels.length > 0) {
              console.log(`Applying labels: ${labels.join(', ')}`);
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            } else {
              console.log('No charts changed, skipping labeling.');
            }
  pr_name:
    if: github.event_name == 'pull_request'
    name: Check PR Title
    runs-on: shipfox-2vcpu-ubuntu-2404
    permissions:
      statuses: write
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Dirty:
    runs-on: shipfox-4vcpu-ubuntu-2404
    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
      - name: Setup Nix
        uses: ./.github/actions/default
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - name: Pre-commit
        env:
          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
        run: nix develop --impure --command just pc
      - name: Get changed files
        id: changed-files
        shell: bash
        run: |
          git diff;
          hasChanged=$(git status --porcelain) 
          if (( $(echo ${#hasChanged}) != 0 )); then
            git status
            echo "There are changes in the repository"
            exit 1
          fi

  
  Artifacts:
    runs-on: shipfox-2vcpu-ubuntu-2404
    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
      - name: Setup Nix
        uses: ./.github/actions/default
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - name: Package
        run: nix develop --impure --command just helm-all true true '--version=0.0.0-build.${{ github.sha }}'
        env:
          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - name: Archive chart
        uses: actions/upload-artifact@v4
        with:
          name: charts_${{ github.ref_type == 'branch' && github.sha }}.tgz
          path: build/*.tgz
          retention-days: 3
  Tests:
    runs-on: shipfox-4vcpu-ubuntu-2404
    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
      - name: Setup Nix
        uses: ./.github/actions/default
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - name: Pre-commit
        run: nix develop --impure --command just tests
