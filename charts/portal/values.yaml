global:
  # -- Enable debug mode
  # @section -- Global configuration
  debug: false
  # -- is the base domain for portal and console
  # @section -- Global configuration
  serviceHost: ""

  aws:
    # -- Enable AWS ELB
    # @section -- Global AWS configuration
    elb: false

  platform:
    console:
      # -- is the scheme for the console
      # @section -- Global configuration
      scheme: "https"
      # -- is the host for the console
      # @section -- Global configuration
      host: "console.{{ .Values.global.serviceHost }}"
    portal:
      # -- is the scheme for the portal
      # @section -- Global configuration
      scheme: "https"
      # -- is the host for the portal
      # @section -- Global configuration
      host: "portal.{{ .Values.global.serviceHost }}"
    cookie:
      # -- is used to encrypt a cookie that share authentication between platform services (console, portal, ...),is used to store the current state organizationId-stackId
      # @section -- Global configuration
      encryptionKey: "changeMe00"
      # -- is the name of the secret
      # @section -- Global configuration
      existingSecret: ""
      # -- is the key contained within the secret
      # @section -- Global configuration
      secretKeys:
        encryptionKey: ""

    membership:
      # -- is the scheme for the membership
      # @section -- Global configuration
      scheme: "https"
      # -- is the host for the membership
      # @section -- Global configuration
      host: "membership.{{ .Values.global.serviceHost }}"

      oauthClient:
        # -- is the id of the client
        # @section -- Global configuration
        id: "platform"
        # -- is the secret of the client
        # @section -- Global configuration
        secret: "changeMe1"
        # -- is the name of the secret
        # @section -- Global configuration
        existingSecret: ""
        # -- is the key contained within the secret
        # @section -- Global configuration
        secretKeys:
          secret: ""

# -- Number of replicas
replicas: 1

# -- Portal autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

podDisruptionBudget:
  # -- Enable pod disruption budget
  enabled: false
  # -- Minimum available pods
  minAvailable: 1
  # -- Maximum unavailable pods
  maxUnavailable: 0

image:
  # -- image repository
  repository: ghcr.io/formancehq/membership-ui
  # -- image pull policy
  pullPolicy: IfNotPresent
  # -- image tag
  tag: 764bb7e199e1d2882e4d5cd205eada0ef0abc283

serviceAccount:
  # -- Service account creation
  create: true
  # -- Service account name
  name: ""
  # -- Service account annotations
  annotations: {}

ingress:
  # -- ingress enabled
  enabled: true
  # -- ingress class name
  className: ""
  # -- ingress annotations
  annotations: {}
  hosts:
    # -- ingress host
    - host: "{{ tpl .Values.global.platform.portal.host $ }}"
      paths:
        - # -- ingress path
          path: /
          # -- ingress path type
          pathType: Prefix
  # -- ingress tls
  tls:
    []
    # -- ingress tls secret name
    # - secretName: YOUR_TLS_SECRET_NAME

# -- AWS Portal target groups
# @section -- Global AWS configuration
aws:
  targetGroups:
    http:
      ipAddressType: "ipv4"
      targetType: "ip"
      targetGroupARN: ""
      serviceRef:
        name: '{{ include "core.fullname" $ }}'
        port: "{{ .Values.service.ports.http.port }}"

# Cookie store portal session in a cookie
config:
  # -- Portal environment
  environment: production

  cookie:
    # -- Cookie secret
    secret: "changeMe2"
    # -- Cookie existing secret
    existingSecret: ""
    # -- Cookie secret key
    secretKeys:
      secret: ""

  # -- Additional environment variables
  additionalEnv: {}

service:
  # -- service annotations
  annotations: {}
  # -- service type
  type: ClusterIP
  # -- service cluster IP
  clusterIP: ""
  ports:
    # -- service http port
    http:
      port: 3000
      # -- service node port
      # nodePort:

# -- Portal volume mounts
volumeMounts: []

# -- Portal volumes
volumes: []

# -- Portal resources
resources:
  {}
  # requests:
  #   cpu: 250m
  #   memory: 512Mi
  # limits:
  #   cpu: 500m
  #   memory: 2048Mi

# -- Portal readiness probe
readinessProbe: {}

# -- Portal liveness probe
livenessProbe: {}

# -- Portal node selector
nodeSelector: {}

# -- Portal tolerations
tolerations: []

# -- Portal affinity
affinity: {}
