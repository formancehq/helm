global:
  # -- Enable debug mode
  # @section -- Global configuration
  debug: false
  # -- is the base domain for portal and console
  # @section -- Global configuration
  serviceHost: ""

  aws:
    # -- Enable AWS ELB
    # @section -- Global AWS configuration
    elb: false

  monitoring:
    # -- Enable otel batching
    # @section -- Global configuration
    batch: false
    traces:
      # -- Enable otel tracing
      # @section -- Global configuration
      enabled: false
      # -- Endpoint
      # @section -- Global configuration
      endpoint: ""
      # -- Exporter
      # @section -- Global configuration
      exporter: "otlp"
      # -- Insecure
      # @section -- Global configuration
      insecure: true
      # -- Mode
      # @section -- Global configuration
      mode: "grpc"
      # -- Port
      # @section -- Global configuration
      port: 4317
  platform:
    console:
      enabled: true
      # -- is the scheme for the console
      # @section -- Global configuration
      scheme: "https"
      
      # -- is the host for the console
      # @section -- Global configuration
      host: "console.{{ .Values.global.serviceHost }}"

      # Deprecated with console-v3
      cookie:
        # -- is used to encrypt a cookie that store authentication between console-v2 and portal
        # @section -- Global configuration
        encryptionKey: "changeMe00"
        # -- is the name of the secret
        # @section -- Global configuration
        existingSecret: ""
        # -- is the key contained within the secret
        # @section -- Global configuration
        secretKeys:
          encryptionKey: ""
    portal:
      # -- is the scheme for the portal
      # @section -- Global configuration
      scheme: "https"
      # -- is the host for the portal
      # @section -- Global configuration
      host: "portal.{{ .Values.global.serviceHost }}"
      oauth:
        client:
          # -- is the id of the client
          # @section -- Global configuration
          id: "portal"
          # -- is the secret of the client
          # @section -- Global configuration
          secret: "changeMe1"
          # -- is the name of the secret
          # @section -- Global configuration
          existingSecret: ""
          # -- is the key contained within the secret
          # @section -- Global configuration
          secretKeys:
            secret: ""
    stargate:
      # -- if enabled, the stackApiUrl is not required
      # It will be templated with `{{ printf "http://%s-%s:8080/#{organizationId}/#{stackId}/api" .Release.Name "stargate" -}}`
      # @section -- Stargate configuration
      enabled: false
      # -- if stargate is disabled, the stackApiUrl is defaulted to the `http://gateway.#{organizationId}-#{stackId}.svc:8080/api`
      # To allow external access sets the stackApiUrl to an external url
      # @section -- Stargate configuration
      stackApiUrl: ""

    membership:
      # -- is the scheme for the membership
      # @section -- Global configuration
      scheme: "https"
      # -- is the host for the membership
      # @section -- Global configuration
      host: "membership.{{ .Values.global.serviceHost }}"

# -- Number of replicas
replicas: 1

podDisruptionBudget:
  # -- Enable pod disruption budget
  enabled: false
  # -- Minimum available pods
  minAvailable: 1
  # -- Maximum unavailable pods
  maxUnavailable: 0

# -- Pod Security Context
podSecurityContext: {}

# -- Container Security Context
securityContext: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

image:
  # -- image repository
  repository: ghcr.io/formancehq/portal
  # -- image pull policy
  pullPolicy: IfNotPresent
  # -- image tag
  tag: ""

imagePullSecrets: []

serviceAccount:
  # -- Service account creation
  create: true
  # -- Service account name
  name: ""
  # -- Service account annotations
  annotations: {}

ingress:
  # -- ingress enabled
  enabled: true
  # -- ingress class name
  className: ""
  # -- ingress annotations
  annotations: {}
  hosts:
  - # -- ingress host
    host: "{{ tpl .Values.global.platform.portal.host $ }}"
    paths:
    # -- ingress path
    - path: /
      # -- ingress path type
      pathType: Prefix
  # -- ingress tls
  tls: []
    # -- ingress tls secret name
    # - secretName: YOUR_TLS_SECRET_NAME

# -- AWS Portal target groups
# @section -- Global AWS configuration
aws:
  targetGroups:
    http:
      ipAddressType: "ipv4"
      targetType: "ip"
      targetGroupARN: ""
      serviceRef:
        name: '{{ include "core.fullname" $ }}'
        port: "{{ .Values.service.ports.http.port }}"

# Cookie store portal session in a cookie
config:
  # -- Portal environment
  environment: production

  featuresDisabled:
  - console_v3_beta

  cookie:
    # -- if console-v2 the name is not configurable.
    # if using console-v3 the name is configurable, it is intended to be used when having multiple console-v3 instances.
    name: ""
    # -- Cookie secret
    secret: "changeMe2"
    # -- Cookie existing secret
    existingSecret: ""
    # -- Cookie secret key
    secretKeys:
      secret: ""

  sentry:
    # -- Sentry enabled
    enabled: false
    # -- Sentry DSN
    dsn: ""
    # -- Sentry environment
    environment: ""
    # -- Sentry release
    release: ""
    # -- Sentry Auth Token
    authToken:
      value: ""
      existingSecret: ""
      secretKeys:
        value: ""

  # -- Additional environment variables
  additionalEnv: []
  # -- Override monitoring configuration
  # monitoring:
  #   # -- Override otel service name
  #   serviceName: "portal"
  #   # -- Override otel resources attributes
  #   attributes: ""

service:
  # -- service annotations
  annotations: {}
  # -- service type
  type: ClusterIP
  # -- service cluster IP
  clusterIP: ""
  ports:
    # -- service http port
    http:
      port: 3000
      # -- service node port
      # nodePort:

# -- Portal volume mounts
volumeMounts: []

# -- Portal annotations 
annotations: {}

# -- Portal volumes
volumes: []

# -- Portal resources
resources: {}
  # requests:
  #   cpu: 250m
  #   memory: 512Mi
  # limits:
  #   cpu: 500m
  #   memory: 2048Mi

# -- Portal readiness probe
readinessProbe: {}

# -- Portal liveness probe
livenessProbe: {}

# -- Portal node selector
nodeSelector: {}

# -- Portal tolerations
tolerations: []

# -- Portal affinity
affinity: {}
