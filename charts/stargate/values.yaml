global:
  # -- Enable debug mode
  debug: false
  # -- is the base domain for portal and console
  serviceHost: ""
  aws:
    # -- Enable AWS IAM across all services, appropriate <service>.serviceAccount.annotations must be set
    # @section -- Global AWS configuration
    iam: false
    # -- Enable AWS ELB across all services, appropriate <service>.aws.targertGroup must be set
    # @section -- Global AWS configuration
    elb: false
  monitoring:
    traces:
      # -- Enable otel tracing
      # @section -- Global configuration
      enabled: false
      # -- Endpoint
      # @section -- Global configuration
      endpoint: "localhost"
      # -- Exporter
      # @section -- Global configuration
      exporter: "otlp"
      # -- Insecure
      # @section -- Global configuration
      insecure: true
      # -- Mode
      # @section -- Global configuration
      mode: "grpc"
      # -- Port
      # @section -- Global configuration
      port: 4317
    logs:
      # -- Enable logging
      # @section -- Global configuration
      enabled: true
      # -- Level: Info, Debug, Error
      # @section -- Global configuration
      level: "info"
      # -- Format
      # @section -- Global configuration
      format: "json"
    metrics:
      # -- Enable
      # @section -- Global configuration
      enabled: false
      # -- Mode
      # @section -- Global configuration
      mode: grpc
      # -- Exporter
      # @section -- Global configuration
      exporter: otlp
      # -- Endpoint
      # @section -- Global configuration
      endpoint: ""
      # -- Port
      # @section -- Global configuration
      port: 4317
      # -- Insecure
      # @section -- Global configuration
      insecure: true

  nats:
    # -- Enable NATS
    # @section -- Global Nats configuration
    enabled: false

    # -- URL for NATS
    # @section -- Global Nats configuration
    url: ""
    auth:
      user:
      password:
      existingSecret: ""
      secretKeys:
        password: password
        username: username

  postgresql:
    # -- Host for PostgreSQL (overrides included postgreql `host`)
    # @section -- Global configuration
    host: ""
    # -- Additional arguments for PostgreSQL Connection URI
    # @section -- Global configuration
    additionalArgs: "sslmode=disable"
    auth:
      # -- Name for a custom user to create (overrides `auth.username`)
      # @section -- Global configuration
      username: formance
      # -- Password for the "postgres" admin user (overrides `auth.postgresPassword`)
      # @section -- Global configuration
      password: formance
      # -- Name for a custom database to create (overrides `auth.database`)
      # @section -- Global configuration
      database: formance
      # -- Password for the custom user to create (overrides `auth.password`)
      # @section -- Global configuration
      postgresPassword: formance
      # -- Name of existing secret to use for PostgreSQL credentials (overrides `auth.existingSecret`).
      # @section -- Global configuration
      existingSecret: ""
      secretKeys:
        # -- Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.adminPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
        # @section -- Global configuration
        adminPasswordKey: ""
        # -- Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.userPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
        # @section -- Global configuration
        userPasswordKey: ""

    service:
      ports:
        # -- PostgreSQL service port (overrides `service.ports.postgresql`)
        # @section -- Global configuration
        postgresql: 5432

podDisruptionBudget:
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  # It is **highly recommended** for webhooks as disruptions can prevent launching new pods.
  enabled: false
  minAvailable: 1
  maxUnavailable: 0

# -- Topology spread constraints
topologySpreadConstraints:
  []
  #   - maxSkew: 1
  #     topologyKey: kubernetes.io/hostname
  #     whenUnsatisfiable: DoNotSchedule

# -- Number of replicas
replicaCount: 1

# -- String to partially override stargate.fullname template with a string (will append the release name)
nameOverride: ""
# -- String to fully override stargate.fullname template with a string
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

# -- Annotations to add to the pod
podAnnotations: {}

# -- Security context for the pod
podSecurityContext:
  {}
  # fsGroup: 2000

# -- Security context for the container
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    http:
      port: 8080
    grpc:
      port: 3068

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: "stargate.{{ .Values.global.serviceHost }}"
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests
resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}

# -- Tolerations for pod assignment
tolerations: []

# -- Affinity for pod assignment
affinity: {}

# -- Aws Stargate target groups
# @section -- Global AWS configuration
aws:
  targetGroups:
    grpc:
      ipAddressType: "ipv4"
      targetType: "ip"
      targetGroupARN: ""
      serviceRef:
        name: '{{ include "core.fullname" $ }}'
        port: "{{ .Values.service.ports.grpc.port | default 3068 }}"

config:
  auth_issuer_url: ""
  publisher:
    clientID: "stargate"
    topicMapping: "stargate"
  monitoring:
    serviceName: "stargate"

image:
  repository: "ghcr.io/formancehq/stargate"
  pullPolicy: "IfNotPresent"
  tag: ""
